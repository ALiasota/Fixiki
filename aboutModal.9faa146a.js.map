{"version":3,"sources":["aboutModal.js"],"names":["Modal","trigger","$qsa","modals","modalsbg","content","closers","w","window","isOpen","contentDelay","len","length","el","document","querySelectorAll","getId","event","preventDefault","self","modalId","dataset","modal","modalIdTrimmed","substring","getElementById","makeDiv","fakediv","div","createElement","id","appendChild","moveTrig","trig","trigProps","transX","transY","scaleX","scaleY","getBoundingClientRect","m","mProps","querySelector","xc","innerWidth","yc","innerHeight","classList","add","width","height","toFixed","Math","round","left","top","contains","style","transform","webkitTransform","setTimeout","requestAnimationFrame","open","addEventListener","hideDiv","opacity","removeEventListener","close","stopImmediatePropagation","target","removeAttribute","i","remove","removeDiv","init","bindActions"],"mappings":"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","file":"aboutModal.9faa146a.js","sourceRoot":"../src","sourcesContent":["\n\n\nvar Modal = (function () {\n\n  var trigger = $qsa('.modal__trigger'); // what you click to activate the modal\n  var modals = $qsa('.modal'); // the entire modal (takes up entire window)\n  var modalsbg = $qsa('.modal__bg'); // the entire modal (takes up entire window)\n  var content = $qsa('.modal__content'); // the inner content of the modal\n\tvar closers = $qsa('.modal__close'); // an element used to close the modal\n  var w = window;\n  var isOpen = false;\n\tvar contentDelay = 400; // duration after you click the button and wait for the content to show\n  var len = trigger.length;\n\n  // make it easier for yourself by not having to type as much to select an element\n  function $qsa(el) {\n    return document.querySelectorAll(el);\n  }\n\n  var getId = function(event) {\n\n    event.preventDefault();\n    var self = this;\n    // get the value of the data-modal attribute from the button\n    var modalId = self.dataset.modal;\n    var len = modalId.length;\n    // remove the '#' from the string\n    var modalIdTrimmed = modalId.substring(1, len);\n    // select the modal we want to activate\n    var modal = document.getElementById(modalIdTrimmed);\n    // execute function that creates the temporary expanding div\n    makeDiv(self, modal);\n  };\n\n  var makeDiv = function(self, modal) {\n\n    var fakediv = document.getElementById('modal__temp');\n\n    /**\n     * if there isn't a 'fakediv', create one and append it to the button that was\n     * clicked. after that execute the function 'moveTrig' which handles the animations.\n     */\n\n    if (fakediv === null) {\n      var div = document.createElement('div');\n      div.id = 'modal__temp';\n      self.appendChild(div);\n      moveTrig(self, modal, div);\n    }\n  };\n\n  var moveTrig = function(trig, modal, div) {\n    var trigProps = trig.getBoundingClientRect();\n    var m = modal;\n    var mProps = m.querySelector('.modal__content').getBoundingClientRect();\n    var transX, transY, scaleX, scaleY;\n    var xc = w.innerWidth / 2;\n    var yc = w.innerHeight / 2;\n\n    // this class increases z-index value so the button goes overtop the other buttons\n    trig.classList.add('modal__trigger--active');\n\n    // these values are used for scale the temporary div to the same size as the modal\n    scaleX = mProps.width / trigProps.width;\n    scaleY = mProps.height / trigProps.height;\n\n    scaleX = scaleX.toFixed(3); // round to 3 decimal places\n    scaleY = scaleY.toFixed(3);\n\n\n    // these values are used to move the button to the center of the window\n    transX = Math.round(xc - trigProps.left - trigProps.width / 2);\n    transY = Math.round(yc - trigProps.top - trigProps.height / 2);\n\n\t\t// if the modal is aligned to the top then move the button to the center-y of the modal instead of the window\n    if (m.classList.contains('modal--align-top')) {\n      transY = Math.round(mProps.height / 2 + mProps.top - trigProps.top - trigProps.height / 2);\n    }\n\n\n\t\t// translate button to center of screen\n\t\ttrig.style.transform = 'translate(' + transX + 'px, ' + transY + 'px)';\n\t\ttrig.style.webkitTransform = 'translate(' + transX + 'px, ' + transY + 'px)';\n\t\t// expand temporary div to the same size as the modal\n\t\tdiv.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n\t\tdiv.style.webkitTransform = 'scale(' + scaleX + ',' + scaleY + ')';\n\n\n\t\twindow.setTimeout(function() {\n\t\t\twindow.requestAnimationFrame(function() {\n\t\t\t\topen(m, div);\n\t\t\t});\n\t\t}, contentDelay);\n\n  };\n\n  var open = function(m, div) {\n\n    if (!isOpen) {\n      // select the content inside the modal\n      var content = m.querySelector('.modal__content');\n      // reveal the modal\n      m.classList.add('modal--active');\n      // reveal the modal content\n      content.classList.add('modal__content--active');\n\n      /**\n       * when the modal content is finished transitioning, fadeout the temporary\n       * expanding div so when the window resizes it isn't visible ( it doesn't\n       * move with the window).\n       */\n\n      content.addEventListener('transitionend', hideDiv, false);\n\n      isOpen = true;\n    }\n\n    function hideDiv() {\n      // fadeout div so that it can't be seen when the window is resized\n      div.style.opacity = '0';\n      content.removeEventListener('transitionend', hideDiv, false);\n    }\n  };\n\n  var close = function(event) {\n\n\t\tevent.preventDefault();\n    event.stopImmediatePropagation();\n\n    var target = event.target;\n    var div = document.getElementById('modal__temp');\n\n    /**\n     * make sure the modal__bg or modal__close was clicked, we don't want to be able to click\n     * inside the modal and have it close.\n     */\n\n    if (isOpen && target.classList.contains('modal__bg') || target.classList.contains('modal__close')) {\n\n      // make the hidden div visible again and remove the transforms so it scales back to its original size\n      div.style.opacity = '1';\n      div.removeAttribute('style');\n\n\t\t\t/**\n\t\t\t* iterate through the modals and modal contents and triggers to remove their active classes.\n      * remove the inline css from the trigger to move it back into its original position.\n\t\t\t*/\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tmodals[i].classList.remove('modal--active');\n\t\t\t\tcontent[i].classList.remove('modal__content--active');\n\t\t\t\ttrigger[i].style.transform = 'none';\n        trigger[i].style.webkitTransform = 'none';\n\t\t\t\ttrigger[i].classList.remove('modal__trigger--active');\n\t\t\t}\n\n      // when the temporary div is opacity:1 again, we want to remove it from the dom\n\t\t\tdiv.addEventListener('transitionend', removeDiv, false);\n\n      isOpen = false;\n\n    }\n\n    function removeDiv() {\n      setTimeout(function() {\n        window.requestAnimationFrame(function() {\n          // remove the temp div from the dom with a slight delay so the animation looks good\n          div.remove();\n        });\n      }, contentDelay - 50);\n    }\n\n  };\n\n  var bindActions = function() {\n    for (var i = 0; i < len; i++) {\n      trigger[i].addEventListener('click', getId, false);\n      closers[i].addEventListener('click', close, false);\n      modalsbg[i].addEventListener('click', close, false);\n    }\n  };\n\n  var init = function() {\n    bindActions();\n  };\n\n  return {\n    init: init\n  };\n\n}());\n\nModal.init();\n"]}